server:
  port: 8080
  servlet:
    context-path: /api
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000

spring:
  application:
    name: yun-picture-backend
  #数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/yun_picture
    username: root
    password: xxxxxx
  #redis配置
  redis:
    host: localhost
    port: 6379
    password: xxxxxx
    timeout: 5000
  #文件最大上传大小
  servlet:
    multipart:
      max-file-size: 10MB
  #Session配置
  session:
    store-type: redis
    # session 30 天后过期
    timeout: 2592000
  # 空间图片分表
  shardingsphere:
    datasource:
      names: yun_picture
      yun_picture:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/yun_picture
        username: root
        password: xxxxxx
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: yun_picture.picture  # 动态分表，范围已在代码手写自动配置
            table-strategy:
              standard:
                sharding-column: spaceId
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.djx.yunpicturebackend.manager.sharding.PictureShardingAlgorithm
    props:
      sql-show: true

mybatis-plus:
  configuration:
    # MyBatis 配置
    map-underscore-to-camel-case: false
    #配置mybatis的日志, 指定输出到控制台
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除字段名
      logic-delete-value: 1 # 逻辑已删除值
      logic-not-delete-value: 0 # 逻辑未删除值
    # 想要使用 MyBatis-Plus 的 SqlRunner，必须要开启配置
    enable-sql-runner: true
#接口文档配置
knife4j:
  enable: true
  openapi:
    title: 接口文档
    version: 1.0
    group:
      default:
        group-name: 默认分组
        api-rule: package
        api-rule-resources:
          - com.djx.yunpicturebackend.controller

# 对象存储配置（腾讯云）
cos:
  client:
    host: "123456"
    secretId: "123456"
    secretKey: "123456"
    region: "123456"
    bucket: "123456"

#阿里云 AI 配置
aliYunAi:
  apiKey: xxxxxx